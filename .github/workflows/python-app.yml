# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12.7
      uses: actions/setup-python@v3
      with:
        python-version: "3.12.7"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # Executa os testes com Pytest e gera um relatÃ³rio
    - name: Run tests with pytest
      run: |
          pytest > pytest-report.txt || true

    # Publish artifact
    - name: Create artifact
      uses: actions/upload-artifact@v3
      with:
        name: python-publish-app-artifact
        path: ./
   #Deploy steps
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.8 #ou @v3
      with:
        name: python-publish-app-artifact
        path: /.artifact
        
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
        scm-do-build-during-deployment: true
        enable-oryx-build: true
